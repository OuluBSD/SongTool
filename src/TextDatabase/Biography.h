#ifndef _TextDatabase_Biography_h_
#define _TextDatabase_Biography_h_


BEGIN_TEXTLIB_NAMESPACE

#define BIOCATEGORY_LIST \
	BIOCATEGORY(HOME) \
	BIOCATEGORY(HOME_KITCHEN) \
	BIOCATEGORY(HOME_WORKDESK) \
	BIOCATEGORY(HOME_BEDROOM) \
	BIOCATEGORY(HOME_COMPUTER) \
	BIOCATEGORY(PEOPLE_FRIENDS) \
	BIOCATEGORY(PEOPLE_CLOSE_FRIENDS) \
	BIOCATEGORY(PEOPLE_ENEMIES) \
	BIOCATEGORY(PEOPLE_PUBLIC_IN_GENERAL) \
	BIOCATEGORY(PEOPLE_SYSTEMIC_ENEMIES) \
	BIOCATEGORY(SEXUALITY_PEOPLE) \
	BIOCATEGORY(SEXUALITY_ADULT_ENTERNTAINMENT) \
	BIOCATEGORY(SEXUALITY_EXPERIENCES) \
	BIOCATEGORY(EDUCATION_CAMPUS) \
	BIOCATEGORY(EDUCATION_HOME) \
	BIOCATEGORY(EDUCATION_INTERNET) \
	BIOCATEGORY(EDUCATION_MUSIC_PRODUCTION) \
	BIOCATEGORY(FAMILY_PARENTAL) \
	BIOCATEGORY(FAMILY_OWN) \
	BIOCATEGORY(EVENTS_MUSIC) \
	BIOCATEGORY(EVENTS_SPORT) \
	BIOCATEGORY(EVENTS_FOOD) \
	BIOCATEGORY(EVENTS_OTHER) \
	BIOCATEGORY(POLITICAL) \
	BIOCATEGORY(POLITICAL_PIRATISM) \
	BIOCATEGORY(PERSONAL_TASTE_FOOD) \
	BIOCATEGORY(PERSONAL_TASTE_ENTERNTAINMENT) \
	BIOCATEGORY(PERSONAL_TASTE_VIDEOGAMES) \
	BIOCATEGORY(PERSONAL_TASTE_MOVIES) \
	BIOCATEGORY(PERSONAL_TASTE_TV) \
	BIOCATEGORY(PERSONAL_TASTE_TV_SERIES) \
	BIOCATEGORY(PERSONAL_TASTE_BOOKS) \
	BIOCATEGORY(PERSONAL_TASTE_WORLD_INFORMATION) \
	BIOCATEGORY(PERSONAL_TASTE_HOBBIES) \
	BIOCATEGORY(PERSONAL_TASTE_PHYSICAL_EXERCISE) \
	BIOCATEGORY(PERSONAL_TASTE_ADVENTURES) \
	BIOCATEGORY(TRADING_BUYING) \
	BIOCATEGORY(TRADING_SELLING) \
	BIOCATEGORY(HEALTH) \
	BIOCATEGORY(HEALTH_SUPPLEMENTS) \
	BIOCATEGORY(HEALTH_MEDICATION) \
	BIOCATEGORY(HEALTH_DOCTOR) \
	BIOCATEGORY(HEALTH_OPERATIONS) \
	BIOCATEGORY(ANIMALS_PETS) \
	BIOCATEGORY(ANIMALS_WILD) \
	BIOCATEGORY(WORK_PROGRAMMING) \
	BIOCATEGORY(WORK_MUSIC_COLLABORATION) \
	BIOCATEGORY(WORK_MUSIC_PRODUCTION) \
	BIOCATEGORY(WORK_SONGWRITING) \



enum {
	#define BIOCATEGORY(x) BIOCATEGORY_##x,
	BIOCATEGORY_LIST
	#undef BIOCATEGORY
	
	BIOCATEGORY_COUNT
};

String KeyToName(String s);
String GetBiographyCategoryEnum(int i);
String GetBiographyCategoryKey(int i);


struct BioYear {
	int year = 0;
	String keywords, text, native_text;
	
	void Jsonize(JsonIO& json) {
		json
			("year", year)
			("keywords", keywords)
			("native_text", native_text)
			("text", text)
			;
	}
};

struct BiographyCategory {
	Array<BioYear> years;
	
	void Jsonize(JsonIO& json) {
		json
			("years", years)
			;
	}
	BioYear& GetAdd(int year);
};

struct Biography {
	ArrayMap<String, BiographyCategory> categories;
	
	
	
	void Jsonize(JsonIO& json) {
		json
			("categories", categories)
			;
	}
	BiographyCategory& GetAdd(Owner& o, int enum_);
	
};



END_TEXTLIB_NAMESPACE


#endif
